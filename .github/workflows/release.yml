name: Validate Project Structure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    name: Validate Project Structure
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate project structure
        shell: pwsh
        run: |
          Write-Host '🔍 Validating Aerofly FS4 Bridge project structure...'
          
          # Check main source file
          if (Test-Path 'aerofly_bridge_dll.cpp') {
            Write-Host '✅ Main source file found: aerofly_bridge_dll.cpp'
          } else {
            Write-Error '❌ Missing main source file: aerofly_bridge_dll.cpp'
          }
          
          # Check documentation
          if (Test-Path 'docs/') {
            $docFiles = Get-ChildItem 'docs/' -Filter '*.md' | Measure-Object
            Write-Host "✅ Documentation folder found with $($docFiles.Count) markdown files"
          } else {
            Write-Error '❌ Missing documentation folder'
          }
          
          # Check build scripts
          if (Test-Path 'scripts/compile.bat') {
            Write-Host '✅ Build script found: scripts/compile.bat'
          } else {
            Write-Error '❌ Missing build script: scripts/compile.bat'
          }
          
          # Check CHANGELOG
          if (Test-Path 'CHANGELOG.md') {
            Write-Host '✅ CHANGELOG.md found'
          } else {
            Write-Error '❌ Missing CHANGELOG.md'
          }

      - name: SDK Header Information
        shell: pwsh
        run: |
          Write-Host '📋 Aerofly SDK Header Information:'
          Write-Host '━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━'
          
          $headerExists = (Test-Path 'tm_external_message.h') -or (Test-Path 'src/tm_external_message.h')
          if ($headerExists) {
            Write-Host '✅ Found tm_external_message.h in repository'
            Write-Host '🚀 Local compilation can proceed'
          } else {
            Write-Host '⚠️  SDK header not found - this is EXPECTED in CI/CD environment'
            Write-Host ''
            Write-Host '📋 For local compilation, users must:'
            Write-Host '   1. Download tm_external_message.h from IPACS Developer Site'
            Write-Host '   2. URL: https://www.aerofly.com/developers/ (External DLL section)'
            Write-Host '   3. Place file in project root directory'
            Write-Host '   4. Run: scripts\compile.bat'
            Write-Host ''
            Write-Host '🔒 Note: SDK header cannot be distributed due to IPACS licensing'
            Write-Host '✅ CI validation completed - source code structure is valid'
            Write-Host ''
            Write-Host '📦 Releases are created manually by maintainer with compiled DLL'
          }

